{"version":3,"sources":["components/ColorWheel/styles.module.scss","components/StepOne/styles.module.scss","store/reducers/index.js","store/reducers/appState.js","helpers.js","components/ColorWheel/index.js","components/StepOne/index.js","App.js","serviceWorker.js","languages/index.js","index.js","store/index.js"],"names":["module","exports","container","thumb","ear","started","combineReducers","appState","polar2xy","r","phi","x","Math","cos","y","sin","EventListenerMode","capture","xy2polar","sqrt","atan2","rad2deg","rad","PI","hsl2rgb","hue","saturation","lightness","r1","g1","b1","chroma","hue1","abs","m","ColorWheel","withProps","Object","objectSpread","ratio","window","devicePixelRatio","width","screen","isMobile","size","calculateCanvasSize","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","initialized","canvasCenter","thumbPosition","thumbColors","ctx","data","initCanvas","canvas","getContext","bcr","getBoundingClientRect","left","top","setState","draw","_this$props","thickness","radius","imageData","createImageData","_xy2polar","_xy2polar2","slicedToArray","deg","index","_hsl2rgb","_hsl2rgb2","red","green","blue","fillRect","translate","beginPath","arc","clip","putImageData","onMouseMove","bind","assertThisInitialized","document","addEventListener","removeEventListener","clientX","_ref","clientY","_this$props2","numberOfThumbs","isConstraint","onColorsChanged","vectorX","vectorY","_xy2polar3","_xy2polar4","mouseRadius","increment","computedRadius","i","push","getImageData","thumbnailColors","map","_map","round","_map2","_map3","_map4","g","b","hex","toString","slice","rgbToHex","_this$state","react_default","a","createElement","className","styles","ref","height","thumbPos","thumbStyle","style","children","Component","defaultProps","StepOne","withI18n","colors","renderEars","t","toConsumableArray","position","backgroundColor","_polar2xy","earStyle","transform","concat","_this2","components_ColorWheel","App","padding","components_StepOne","Boolean","location","hostname","match","i18n","use","reactI18nextModule","init","resources","en","translation","vi","ru","lng","fallbackLng","interpolation","escapeValue","ReactDOM","render","es","store","createStore","reducers","applyMiddleware","thunk","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.552d332f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__HBQoo\",\"thumb\":\"styles_thumb__3lKLu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ear\":\"styles_ear__3QQod\",\"started\":\"styles_started__1B25A\"};","import {combineReducers} from \"redux\";\nimport appState from \"./appState\";\n\nexport default combineReducers({\n    appState\n})","export default {}","export const polar2xy = (r, phi) => ({\n  x: r * Math.cos(phi),\n  y: r * Math.sin(phi)\n});","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withProps} from 'recompose';\nimport {isMobile} from 'react-device-detect';\nimport styles from './styles.module.scss';\nimport {polar2xy} from \"../../helpers\";\n\n//region Helpers\nconst EventListenerMode = {capture: true};\nconst calculateCanvasSize = () => {\n    const ratio = window.devicePixelRatio || 1,\n      width = window.screen.width * ratio;\n    return isMobile ? {\n      ratio,\n      size: width - 40\n    } : {\n      ratio,\n      size: width * 0.3\n    };\n  },\n  xy2polar = (x, y) => {\n    let r = Math.sqrt(x * x + y * y);\n    let phi = Math.atan2(y, x);\n    return [r, phi];\n  },\n  rad2deg = rad => ((rad + Math.PI) / (2 * Math.PI)) * 360,\n  hsl2rgb = (hue, saturation, lightness) => {\n    let chroma = lightness * saturation;\n    let hue1 = hue / 60;\n    let x = chroma * (1 - Math.abs((hue1 % 2) - 1));\n    let r1, g1, b1;\n    if (hue1 >= 0 && hue1 <= 1) {\n      ([r1, g1, b1] = [chroma, x, 0]);\n    } else if (hue1 >= 1 && hue1 <= 2) {\n      ([r1, g1, b1] = [x, chroma, 0]);\n    } else if (hue1 >= 2 && hue1 <= 3) {\n      ([r1, g1, b1] = [0, chroma, x]);\n    } else if (hue1 >= 3 && hue1 <= 4) {\n      ([r1, g1, b1] = [0, x, chroma]);\n    } else if (hue1 >= 4 && hue1 <= 5) {\n      ([r1, g1, b1] = [x, 0, chroma]);\n    } else if (hue1 >= 5 && hue1 <= 6) {\n      ([r1, g1, b1] = [chroma, 0, x]);\n    }\n\n    let m = lightness - chroma;\n    let [r, g, b] = [r1 + m, g1 + m, b1 + m];\n\n    // Change r,g,b values from [0,1] to [0,255]\n    return [255 * r, 255 * g, 255 * b];\n  },\n  rgbToHex = (r, g, b) => {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  };\n\n//endregion\n\n@withProps(() => {\n  return {\n    ...(calculateCanvasSize())\n  };\n})\nclass ColorWheel extends Component {\n  static propTypes = {\n    size: PropTypes.number,\n    ratio: PropTypes.number,\n    thickness: PropTypes.number,\n    numberOfThumbs: PropTypes.number,\n    isConstraint: PropTypes.bool,\n    children: PropTypes.func,\n    onColorsChanged: PropTypes.func,\n  };\n  static defaultProps = {\n    thickness: 0,\n    numberOfThumbs: 1,\n    isConstraint: true,\n    children: () => {\n    },\n    onColorsChanged: () => {\n    }\n  };\n  state = {\n    initialized: false,\n    canvasCenter: {x: 0, y: 0},\n    thumbPosition: [],\n    thumbColors: []\n  };\n  ctx = null;\n  data = null;\n\n  constructor(props) {\n    super(props);\n    this.onMouseMove = this.onMouseMove.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousemove', this.onMouseMove, EventListenerMode);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.onMouseMove, EventListenerMode);\n  }\n\n  onMouseMove({clientX, clientY}) {\n    if (!this.state.initialized) return;\n\n    // calculate exactly thumbs coordinates\n    // mouseRadius is just a distance from mousepoint to wheel center\n    let {size, numberOfThumbs, isConstraint, onColorsChanged} = this.props,\n      {canvasCenter} = this.state,\n      radius = size * 1.0 / 2;\n    let vectorX = clientX - canvasCenter.x,\n      vectorY = clientY - canvasCenter.y,\n      [mouseRadius, phi] = xy2polar(vectorX, vectorY),\n      thumbPosition = [],\n      //     thumbPosition = polar2xy(radius, phi);\n      // thumbPosition.x += radius;\n      // thumbPosition.y += radius;\n      increment = 2 * Math.PI / numberOfThumbs;\n\n    let computedRadius = radius;\n    if (!isConstraint && mouseRadius < radius)\n      computedRadius = mouseRadius;\n    computedRadius--;\n\n    for (let i = 0; i < numberOfThumbs; i++) {\n      const thumb = polar2xy(computedRadius, phi);\n      thumb.x += radius;\n      thumb.y += radius;\n      thumb.phi = phi;\n      thumb.deg = rad2deg(phi);\n      thumbPosition.push(thumb);\n\n      phi += increment;\n    }\n\n    // from thumbPosition, pick colors\n    const data = this.data || this.ctx.getImageData(0, 0, size, size).data,\n      thumbnailColors = thumbPosition.map(thumb => {\n        const [x, y] = [thumb.x, thumb.y].map(Math.round),\n          [r, g, b] = [0, 1, 2].map(i => data[(x + y * size) * 4 + i]);\n\n        return {r, g, b, hex: rgbToHex(r, g, b)};\n      });\n\n    this.setState({\n      thumbPosition,\n      thumbColors: thumbnailColors\n    }, () => onColorsChanged(thumbnailColors));\n  }\n\n  initCanvas = canvas => {\n    this.ctx = canvas.getContext(\"2d\");\n    // calculate canvas center fixed position\n    const {size} = this.props,\n      bcr = canvas.getBoundingClientRect(),\n      canvasCenter = {\n        x: bcr.left + size / 2,\n        y: bcr.top + size / 2\n      };\n    this.setState({canvasCenter, initialized: true}, () => this.draw());\n  };\n  draw = () => {\n    let {size, thickness} = this.props,\n      pixelPadding = 3,\n      radius = size / 2,\n      ctx = this.ctx,\n      imageData = ctx.createImageData(size, size),\n      data = imageData.data;\n    for (let x = -radius; x < radius; x++)\n      for (let y = -radius; y < radius; y++) {\n        let [r, phi] = xy2polar(x, y);\n        if (r > radius) continue;\n        if (thickness > 0 && r < (radius - thickness - pixelPadding)) continue;\n        let deg = rad2deg(phi),\n          adjustedX = x + radius,\n          adjustedY = y + radius,\n          pixelWidth = 4,\n          index = (adjustedX + (adjustedY * size)) * pixelWidth;\n        let hue = deg,\n          sat = r / radius,\n          // lightness = r / (2 * radius) + 1 / 2,\n          lightness = 1.0,\n          [red, green, blue] = hsl2rgb(hue, sat, lightness),\n          alpha = 255;\n        data[index] = red;\n        data[index + 1] = green;\n        data[index + 2] = blue;\n        data[index + 3] = alpha;\n      }\n\n    //create clipping path\n    ctx.fillRect(0, 0, 2 * radius, 2 * radius);\n    ctx.translate(radius, radius);\n    radius -= pixelPadding;\n    ctx.beginPath();\n    ctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n    ctx.clip();\n\n    //fill with calculated data\n    // ctx.translate(0, 0);\n    this.data = imageData.data;\n    ctx.putImageData(imageData, 0, 0);\n  };\n\n  render() {\n    const size = this.props.size,\n      {thumbPosition, thumbColors} = this.state,\n      renderThumb = thumbPos => {\n        const thumbStyle = {\n          top: thumbPos.y + 'px',\n          left: thumbPos.x + 'px'\n        };\n        return <div className={styles.thumb} style={thumbStyle}/>;\n      };\n    return <div className={styles.container}>\n      <canvas ref={this.initCanvas} width={size} height={size}/>\n      {this.state.initialized && thumbPosition.map(renderThumb)}\n      {this.props.children({\n        thumbPosition,\n        thumbColors\n      })}\n    </div>;\n  }\n}\n\nexport default ColorWheel;","import React, {Component} from \"react\";\nimport {withI18n} from \"react-i18next\";\nimport ColorWheel from \"../ColorWheel\";\n\nimport styles from './styles.module.scss';\nimport {polar2xy} from \"../../helpers\";\n\n@withI18n()\nclass StepOne extends Component {\n  state = {\n    colors: []\n  };\n\n  renderEars = ({thumbPosition, thumbColors}) => {\n    const {t} = this.props;\n    return [...thumbPosition.map((position, index) => {\n      const backgroundColor = thumbColors[index].hex,\n        {x, y} = polar2xy(25, Math.PI - position.phi);\n      const earStyle = {\n        backgroundColor,\n        transform: `translate(${x}px, ${y}px)`\n      };\n      return <div className={styles.ear} style={earStyle}/>;\n    }), <div className={styles.started}/>, <div><h1>{t('colorWheel')}</h1><p>{t('clickToGetStarted')}</p></div>];\n  };\n\n  render() {\n    const onColorsChanged = colors => this.setState({colors});\n    return (\n      <div className=\"App\">\n        <ColorWheel thickness={40} numberOfThumbs={3} onColorsChanged={onColorsChanged}>\n          {this.renderEars}\n        </ColorWheel>\n      </div>\n    );\n  }\n}\n\nexport default StepOne;","import React, {Component} from 'react';\nimport StepOne from \"./components/StepOne\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" style={{padding: '60px'}}>\n        <StepOne/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from \"i18next\";\nimport {reactI18nextModule} from \"react-i18next\";\nimport en from './en.json';\nimport vi from './vi.json';\nimport ru from './ru.json';\n\ni18n.use(reactI18nextModule)\n  .init({\n    resources: {\n      en: {\n        translation: en\n      },\n      vi: {\n        translation: vi\n      },\n      ru: {\n        translation: ru\n      }\n    },\n    lng: \"en\",\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false\n    }\n  });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport configStore from './store';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/app.module.scss';\nimport './languages';\n\nReactDOM.render(<Provider store={configStore()}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from './reducers'\n\nexport default () => createStore(reducers, applyMiddleware(thunk))"],"sourceRoot":""}