{"version":3,"sources":["components/ColorWheel/styles.module.scss","components/StepOne/styles.module.scss","store/reducers/index.js","store/reducers/appState.js","helpers.js","components/ColorWheel/index.js","components/StepOne/index.js","App.js","serviceWorker.js","languages/index.js","index.js","store/index.js"],"names":["module","exports","container","scopedContent","mainWheel","thumb","ear","started","combineReducers","appState","polar2xy","r","phi","x","Math","cos","y","sin","EventListenerMode","capture","xy2polar","sqrt","atan2","rad2deg","rad","PI","hsl2rgb","hue","saturation","lightness","r1","g1","b1","chroma","hue1","abs","m","rgbToHex","g","b","toString","slice","ColorWheel","withProps","Object","objectSpread","ratio","window","devicePixelRatio","width","screen","isMobile","size","parseInt","calculateCanvasSize","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","initialized","canvasCenter","thumbPosition","thumbColors","scoped","ctx","data","initCanvas","canvas","getContext","bcr","getBoundingClientRect","left","top","setState","draw","_this$props","thickness","radius","imageData","createImageData","_xy2polar","_xy2polar2","slicedToArray","deg","index","_hsl2rgb","_hsl2rgb2","red","green","blue","fillRect","translate","beginPath","arc","clip","putImageData","onMouseMove","bind","assertThisInitialized","document","addEventListener","removeEventListener","clientX","_ref","clientY","_this$props2","numberOfThumbs","isConstraint","onColorsChanged","vectorX","vectorY","_xy2polar3","_xy2polar4","mouseRadius","increment","computedRadius","i","push","getImageData","thumbnailColors","map","_map","round","_map2","_map3","_map4","hex","_this$state","args","originalScoped","renderScoped","React","cloneElement","className","classnames","styles","react_default","a","createElement","ref","height","thumbPos","thumbStyle","style","children","Component","defaultProps","StepOne","withTranslation","colors","renderEars","t","position","backgroundColor","_polar2xy","earStyle","transform","concat","_this2","components_ColorWheel","App","step","getStepComponent","padding","components_StepOne","Boolean","location","hostname","match","i18n","use","initReactI18next","init","resources","en","translation","vi","ru","lng","fallbackLng","interpolation","escapeValue","ReactDOM","render","es","store","createStore","reducers","applyMiddleware","thunk","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.66c2e963.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2kRPO\",\"scopedContent\":\"styles_scopedContent__29NLN\",\"mainWheel\":\"styles_mainWheel__35iHf\",\"thumb\":\"styles_thumb__XOlUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ear\":\"styles_ear__1cGPn\",\"started\":\"styles_started__3JQw6\"};","import {combineReducers} from \"redux\";\nimport appState from \"./appState\";\n\nexport default combineReducers({\n    appState\n})","export default {}","export const polar2xy = (r, phi) => ({\n  x: r * Math.cos(phi),\n  y: r * Math.sin(phi)\n});","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { withProps } from \"recompose\";\nimport { isMobile } from \"react-device-detect\";\nimport styles from \"./styles.module.scss\";\nimport { polar2xy } from \"../../helpers\";\nimport classnames from \"classnames\";\n\n//region Helpers\nconst EventListenerMode = { capture: true };\nconst calculateCanvasSize = () => {\n    const ratio = window.devicePixelRatio || 1,\n      width = window.screen.width * ratio;\n    return isMobile\n      ? {\n          ratio,\n          size: width - 40\n        }\n      : {\n          ratio,\n          size: parseInt(width * 0.3)\n        };\n  },\n  xy2polar = (x, y) => {\n    let r = Math.sqrt(x * x + y * y);\n    let phi = Math.atan2(y, x);\n    return [r, phi];\n  },\n  rad2deg = rad => ((rad + Math.PI) / (2 * Math.PI)) * 360,\n  hsl2rgb = (hue, saturation, lightness) => {\n    let chroma = lightness * saturation;\n    let hue1 = hue / 60;\n    let x = chroma * (1 - Math.abs((hue1 % 2) - 1));\n    let r1, g1, b1;\n    if (hue1 >= 0 && hue1 <= 1) {\n      [r1, g1, b1] = [chroma, x, 0];\n    } else if (hue1 >= 1 && hue1 <= 2) {\n      [r1, g1, b1] = [x, chroma, 0];\n    } else if (hue1 >= 2 && hue1 <= 3) {\n      [r1, g1, b1] = [0, chroma, x];\n    } else if (hue1 >= 3 && hue1 <= 4) {\n      [r1, g1, b1] = [0, x, chroma];\n    } else if (hue1 >= 4 && hue1 <= 5) {\n      [r1, g1, b1] = [x, 0, chroma];\n    } else if (hue1 >= 5 && hue1 <= 6) {\n      [r1, g1, b1] = [chroma, 0, x];\n    }\n\n    let m = lightness - chroma;\n    let [r, g, b] = [r1 + m, g1 + m, b1 + m];\n\n    // Change r,g,b values from [0,1] to [0,255]\n    return [255 * r, 255 * g, 255 * b];\n  },\n  rgbToHex = (r, g, b) => {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  };\n\n//endregion\n\n@withProps(() => {\n  return {\n    ...calculateCanvasSize()\n  };\n})\nclass ColorWheel extends Component {\n  static propTypes = {\n    size: PropTypes.number,\n    ratio: PropTypes.number,\n    thickness: PropTypes.number,\n    numberOfThumbs: PropTypes.number,\n    isConstraint: PropTypes.bool,\n    renderScoped: PropTypes.func,\n    children: PropTypes.func,\n    onColorsChanged: PropTypes.func\n  };\n  static defaultProps = {\n    thickness: 0,\n    numberOfThumbs: 1,\n    isConstraint: true,\n    renderScoped: () => {},\n    children: () => {},\n    onColorsChanged: () => {}\n  };\n  state = {\n    initialized: false,\n    canvasCenter: { x: 0, y: 0 },\n    thumbPosition: [],\n    thumbColors: [],\n    scoped: null\n  };\n  ctx = null;\n  data = null;\n\n  constructor(props) {\n    super(props);\n    this.onMouseMove = this.onMouseMove.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousemove\", this.onMouseMove, EventListenerMode);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      \"mousemove\",\n      this.onMouseMove,\n      EventListenerMode\n    );\n  }\n\n  onMouseMove({ clientX, clientY }) {\n    if (!this.state.initialized) return;\n\n    // calculate exactly thumbs coordinates\n    // mouseRadius is just a distance from mousepoint to wheel center\n    let { size, numberOfThumbs, isConstraint, onColorsChanged } = this.props,\n      { canvasCenter } = this.state,\n      radius = (size * 1.0) / 2;\n    let vectorX = clientX - canvasCenter.x,\n      vectorY = clientY - canvasCenter.y,\n      [mouseRadius, phi] = xy2polar(vectorX, vectorY),\n      thumbPosition = [],\n      //     thumbPosition = polar2xy(radius, phi);\n      // thumbPosition.x += radius;\n      // thumbPosition.y += radius;\n      increment = (2 * Math.PI) / numberOfThumbs;\n\n    let computedRadius = radius;\n    if (!isConstraint && mouseRadius < radius) computedRadius = mouseRadius;\n    computedRadius--;\n\n    for (let i = 0; i < numberOfThumbs; i++) {\n      const thumb = polar2xy(computedRadius, phi);\n      thumb.x += radius;\n      thumb.y += radius;\n      thumb.phi = phi;\n      thumb.deg = rad2deg(phi);\n      thumbPosition.push(thumb);\n\n      phi += increment;\n    }\n\n    // from thumbPosition, pick colors\n    const data = this.data || this.ctx.getImageData(0, 0, size, size).data,\n      thumbnailColors = thumbPosition.map(thumb => {\n        const [x, y] = [thumb.x, thumb.y].map(Math.round),\n          [r, g, b] = [0, 1, 2].map(i => data[(x + y * size) * 4 + i]);\n\n        return { r, g, b, hex: rgbToHex(r, g, b) };\n      });\n\n    this.setState(\n      {\n        thumbPosition,\n        thumbColors: thumbnailColors\n      },\n      () => onColorsChanged(thumbnailColors)\n    );\n  }\n\n  initCanvas = canvas => {\n    this.ctx = canvas.getContext(\"2d\");\n    // calculate canvas center fixed position\n    const { size } = this.props,\n      bcr = canvas.getBoundingClientRect(),\n      canvasCenter = {\n        x: bcr.left + size / 2,\n        y: bcr.top + size / 2\n      };\n    this.setState({ canvasCenter, initialized: true }, () => this.draw());\n  };\n  draw = () => {\n    let { size, thickness } = this.props;\n    let pixelPadding = 3,\n      radius = size / 2,\n      ctx = this.ctx,\n      imageData = ctx.createImageData(size, size),\n      data = imageData.data;\n    for (let x = -radius; x < radius; x++)\n      for (let y = -radius; y < radius; y++) {\n        let [r, phi] = xy2polar(x, y);\n        if (r > radius) continue;\n        if (thickness > 0 && r < radius - thickness - pixelPadding) continue;\n        let deg = rad2deg(phi),\n          adjustedX = x + radius,\n          adjustedY = y + radius,\n          pixelWidth = 4,\n          index = (adjustedX + adjustedY * size) * pixelWidth;\n        let hue = deg,\n          sat = r / radius,\n          // lightness = r / (2 * radius) + 1 / 2,\n          lightness = 1.0,\n          [red, green, blue] = hsl2rgb(hue, sat, lightness),\n          alpha = 255;\n        data[index] = red;\n        data[index + 1] = green;\n        data[index + 2] = blue;\n        data[index + 3] = alpha;\n      }\n\n    //create clipping path\n    ctx.fillRect(0, 0, 2 * radius, 2 * radius);\n    ctx.translate(radius, radius);\n    radius -= pixelPadding;\n    ctx.beginPath();\n    ctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n    ctx.clip();\n\n    //fill with calculated data\n    // ctx.translate(0, 0);\n    this.data = imageData.data;\n    ctx.putImageData(imageData, 0, 0);\n  };\n\n  render() {\n    const size = this.props.size,\n      { thumbPosition, thumbColors } = this.state,\n      renderThumb = thumbPos => {\n        const thumbStyle = {\n          top: thumbPos.y + \"px\",\n          left: thumbPos.x + \"px\"\n        };\n        return <div className={styles.thumb} style={thumbStyle} />;\n      },\n      args = {\n        thumbPosition,\n        thumbColors\n      },\n      originalScoped = this.props.renderScoped(args),\n      scoped = React.cloneElement(originalScoped, {\n        className: classnames(\n          originalScoped.props.className,\n          styles.scopedContent\n        )\n      });\n    return (\n      <div className={styles.container}>\n        <div className={styles.mainWheel}>\n          <canvas ref={this.initCanvas} width={size} height={size} />\n          {this.state.initialized && thumbPosition.map(renderThumb)}\n          {scoped}\n        </div>\n        {this.props.children(args)}\n      </div>\n    );\n  }\n}\n\nexport default ColorWheel;\n","import React, { Component } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport ColorWheel from \"../ColorWheel\";\n\nimport styles from \"./styles.module.scss\";\nimport { polar2xy } from \"../../helpers\";\n\n@withTranslation()\nclass StepOne extends Component {\n  state = {\n    colors: []\n  };\n\n  renderEars = ({ thumbPosition, thumbColors }) => {\n    const { t } = this.props;\n    return (\n      <div>\n        {thumbPosition.map((position, index) => {\n          const backgroundColor = thumbColors[index].hex,\n            { x, y } = polar2xy(25, Math.PI - position.phi);\n          const earStyle = {\n            backgroundColor,\n            transform: `translate(${x}px, ${y}px)`\n          };\n          return <div className={styles.ear} style={earStyle} />;\n        })}\n        <div className={styles.started} />,{\" \"}\n        <div>\n          <h1>{t(\"colorWheel\")}</h1>\n          <p>{t(\"clickToGetStarted\")}</p>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const onColorsChanged = colors => this.setState({ colors });\n    return (\n      <div>\n        <ColorWheel\n          thickness={30}\n          numberOfThumbs={3}\n          onColorsChanged={onColorsChanged}\n          renderScoped={this.renderEars}\n        />\n      </div>\n    );\n  }\n}\n\nexport default StepOne;\n","import React, { Component } from \"react\";\nimport StepOne from \"./components/StepOne\";\n\nclass App extends Component {\n  state = {\n    step: 0\n  };\n\n  getStepComponent = () => {\n    return [StepOne][this.state.step];\n  };\n\n  render() {\n    return (\n      <div className=\"App\" style={{ padding: \"60px\" }}>\n        <StepOne />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\nimport en from './en.json';\nimport vi from './vi.json';\nimport ru from './ru.json';\n\ni18n.use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en\n      },\n      vi: {\n        translation: vi\n      },\n      ru: {\n        translation: ru\n      }\n    },\n    lng: \"en\",\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false\n    }\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport configStore from './store';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/app.module.scss';\nimport './languages';\n\nReactDOM.render(<Provider store={configStore()}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from './reducers'\n\nexport default () => createStore(reducers, applyMiddleware(thunk))"],"sourceRoot":""}