{"version":3,"sources":["/home/myowngrave/WebstormProjects/myowngrave.github.io/src/components/ColorWheel/styles.module.scss","/home/myowngrave/WebstormProjects/myowngrave.github.io/src/components/StepOne/styles.module.scss","/home/myowngrave/WebstormProjects/myowngrave.github.io/node_modules/compass-mixins/lib/compass/css3/_font-face.scss","/home/myowngrave/WebstormProjects/myowngrave.github.io/src/styles/inc/vars.scss","/home/myowngrave/WebstormProjects/myowngrave.github.io/src/styles/inc/mixins.scss","/home/myowngrave/WebstormProjects/myowngrave.github.io/src/styles/app.module.scss"],"names":[],"mappings":"AAEA,yBACE,oBAAoB,AACpB,mBAAmB,AACnB,uBAAuB,AACvB,iBAAkB,CAInB,AARD,gCAMI,aAAc,CACf,AAGH,qBACE,kBAAkB,AAClB,uCAAgC,AAAhC,+BAAgC,AAChC,WAfS,AAgBT,YAhBS,AAiBT,gBAAiB,AACjB,sBAAuB,AACvB,iBAAkB,CACnB,ACjBD,mBAEE,wBAJ0C,AAK1C,yBAL0C,AAQ1C,kBAAiC,AACjC,iBAAgC,AAEhC,WAAY,CAEb,AAED,0CAZE,kBAAkB,AAGlB,MAAM,AACN,OAAO,AAGP,kBAAkB,AAElB,UAAW,CAoBZ,AAjBD,uBAEE,WAAW,AACX,YAAY,AAMZ,eAAiB,CAQlB,AAjBD,2BAYI,kBAAkB,AAClB,aAAa,AACb,sBAAsB,AACtB,kBAAmB,CACpB,ACCD,WACE,mBClCe,ADuCf,6DEd4E,AFgB1E,gBEtCc,AFyCd,iBEzCqB,CAAA,AF8BzB,WACE,mBClCe,ADuCf,mEEd4E,AFgB1E,gBErCoB,AFwCpB,iBExC2B,CAAA,AF6B/B,WACE,mBClCe,ADuCf,4DEd4E,AFgB1E,gBEpCa,AFuCb,iBEvCoB,CAAA,AF4BxB,WACE,mBClCe,ADuCf,kEEd4E,AFgB1E,gBEnCmB,AFsCnB,iBEtC0B,CAAA,AF2B9B,WACE,mBClCe,ADuCf,8DEd4E,AFgB1E,gBE9Be,AFiCf,iBEjCsB,CAAA,AFsB1B,WACE,mBClCe,ADuCf,+DEd4E,AFgB1E,gBE7BgB,AFgChB,iBEhCuB,CAAA,AFqB3B,WACE,mBClCe,ADuCf,6DEd4E,AFgB1E,gBE5Bc,AF+Bd,iBE/BqB,CAAA,AFoBzB,WACE,mBClCe,ADuCf,mEEd4E,AFgB1E,gBE3BoB,AF8BpB,iBE9B2B,CAAA,AFmB/B,WACE,mBClCe,ADuCf,8DEd4E,AFgB1E,gBE1Be,AF6Bf,iBE7BsB,CAAA,AFkB1B,WACE,mBClCe,ADuCf,oEEd4E,AFgB1E,gBEzBqB,AF4BrB,iBE5B4B,CAAA,AFiBhC,WACE,mBClCe,ADuCf,4DEd4E,AFgB1E,gBEtBa,AFyBb,iBEzBoB,CAAA,AFcxB,WACE,mBClCe,ADuCf,kEEd4E,AFgB1E,gBErBmB,AFwBnB,iBExB0B,CAAA,AChBhC,KACE,6DAAsE,AACtE,cAAe,CAChB","file":"main.815da019.chunk.css","sourcesContent":["$size: 26px;\n\n.container {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  canvas {\n    display: block;\n  }\n}\n\n.thumb {\n  position: absolute;\n  transform: translate(-50%, -50%);\n  width: $size;\n  height: $size;\n  background: white;\n  border: 2px solid black;\n  border-radius: 50%;\n}","$earsOverflowSize: 50px;\n$earsSize: calc(100% + #{$earsOverflowSize});\n\n.ear {\n  position: absolute;\n  width: $earsSize;\n  height: $earsSize;\n  top: 0;\n  left: 0;\n  margin-left: -$earsOverflowSize/2;\n  margin-top: -$earsOverflowSize/2;\n  border-radius: 50%;\n  opacity: .17;\n  z-index: -1;\n}\n\n.started {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top:0;\n  left:0;\n  border-radius: 50%;\n  z-index: -1;\n\n  background: white;\n\n  +div{\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}","@import \"shared\";\n\n// Cross-browser support for @font-face. Supports IE, Gecko, Webkit, Opera.\n//\n// * $name is required, arbitrary, and what you will use in font stacks.\n// * $font-files is required using font-files('relative/location', 'format').\n//   for best results use this order: woff, opentype/truetype, svg\n// * $eot is required by IE, and is a relative location of the eot file.\n// * $weight shows if the font is bold, defaults to normal\n// * $style defaults to normal, might be also italic\n// * For android 2.2 Compatiblity, please ensure that your web page has\n//   a meta viewport tag.\n// * To support iOS < 4.2, an SVG file must be provided\n//\n// If you need to generate other formats check out the Font Squirrel\n// [font generator](http://www.fontsquirrel.com/fontface/generator)\n//\n\n// In order to refer to a specific style of the font in your stylesheets as \n// e.g. \"font-style: italic;\",  you may add a couple of @font-face includes\n// containing the respective font files for each style and specying\n// respective the $style parameter.\n\n// Order of the includes matters, and it is: normal, bold, italic, bold+italic.\n\n@mixin font-face(\n  $name, \n  $font-files, \n  $eot: false,\n  $weight: false,\n  $style: false\n) {\n  $iefont: unquote(\"#{$eot}?#iefix\");\n  @font-face {\n    font-family: quote($name);\n    @if $eot {\n      src: font-url($eot);\n      $font-files: font-url($iefont) unquote(\"format('eot')\"), $font-files; \n    }\n    src: $font-files;\n    @if $weight {\n      font-weight: $weight;\n    }\n    @if $style {\n      font-style: $style;\n    }\n  }\n}\n","$fontName: 'Roboto';","@import \"~compass-mixins/lib/compass/css3\";\n\n$fontmap: (\n        \"Black\": 900 normal,\n        \"BlackItalic\": 900 italic,\n        \"Bold\": 700 normal,\n        \"BoldItalic\": 700 italic,\n        //\"Hairline\": 100 normal,\n        //\"HairlineItalic\": 100 italic,\n        //\"Heavy\": 800 normal,\n        //\"HeavyItalic\": 800 italic,\n        \"Italic\": 400 italic,\n        \"Regular\": 400 normal,\n        \"Light\": 300 normal,\n        \"LightItalic\": 300 italic,\n        \"Medium\": 500 normal,\n        \"MediumItalic\": 500 italic,\n        //\"Semibold\": 600 normal,\n        //\"SemiboldItalic\": 600 italic,\n        \"Thin\": 200 normal,\n        \"ThinItalic\": 200 italic,\n);\n\n@mixin embedFonts($fontName, $ext, $fonts: $fontmap) {\n  @each $suffix, $prop in $fonts {\n    @include font-face($fontName, url(\"../fonts/#{$fontName}-#{$suffix}#{$ext}\"), false, nth($prop, 1), nth($prop, 2));\n  }\n}","@import \"inc\";\n\n@include embedFonts($fontName, \".ttf\")\n\nbody {\n  font-family: $fontName, Arial, \"Helvetica Neue\", Helvetica, sans-serif;\n  font-size: 16px;\n}"]}